services:
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl
    networks:
      - main

  habit_tracker1:
    container_name: habit_tracker1
    build: .
    command: ["primary", 
      "python3", "-m",
      "gunicorn", "-b", "0.0.0.0:8000", 
      "Config.wsgi:application", 
      "--workers", "2",
      "--reload"
      ]
    # it's for debug
    volumes:
      - .:/app
    ports:
      - 81:8000
    env_file:
      - .env
    depends_on:
      - postgres_primary
      # - postgres_replica
      - redis
    networks:
      - main

  habit_tracker2:
    container_name: habit_tracker2
    build: .
    command: ["replica", 
      "python3", "-m",
      "gunicorn", "-b", "0.0.0.0:8000", 
      "Config.wsgi:application", 
      "--workers", "2",
      "--reload"
      ]
    # it's for debug
    volumes:
      - .:/app
    ports:
      - 82:8000
    env_file:
      - .env
    depends_on:
      - postgres_primary
      # - postgres_replica
      - redis
    networks:
      - main

  habit_tracker3:
    container_name: habit_tracker3
    build: .
    command: ["replica", 
      "python3", "-m",
      "gunicorn", "-b", "0.0.0.0:8000", 
      "Config.wsgi:application", 
      "--workers", "2",
      "--reload"
      ]
    # it's for debug
    volumes:
      - .:/app
    ports:
      - 83:8000
    env_file:
      - .env
    depends_on:
      - postgres_primary
      # - postgres_replica
      - redis
    networks:
      - main

  postgres_primary:
    container_name: postgres_primary
    image: postgres
    volumes:
      - postgres_pri_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5434:5432
    networks:
      - main

  postgres_replica:
    container_name: postgres_replica
    image: postgres
    volumes:
      - postgres_rep_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5433:5432
    networks:
      - main

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    env_file:
      - .env
    command: ["redis-server", "--requirepass", "$$REDIS_PASSWORD"]
    networks:
      - main


volumes:
  postgres_pri_data:
  postgres_rep_data:
  redis_data:

networks:
  main: